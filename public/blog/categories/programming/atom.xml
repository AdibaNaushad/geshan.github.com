<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Programming | Geshan's Blog]]></title>
  <link href="http://yoursite.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-10-31T08:05:28+04:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Geshan Manandhar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Big Thanks to All the Programmers, You Make the World Go Round]]></title>
    <link href="http://yoursite.com/blog/2014/07/12/a-big-thanks-to-all-programmers-you/"/>
    <updated>2014-07-12T13:16:00+04:00</updated>
    <id>http://yoursite.com/blog/2014/07/12/a-big-thanks-to-all-programmers-you</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Call them programmers or developers or software engineers, in this technology centered world, your life is a easier also because of them. If you notice you are addicted to technology in all aspects of your life now a days, you wake up when the alarm app rings on your phone, all day at work you are constantly checking email, after work you connect with your friends on facebook, before sleeping you browse through the news. All these activities are possible because one or more programmers wrote some working code and released the application that you are using on your desktop, laptop, mobile etc.<br /><br />It is structured words like the one you see below that is changing how we live in the current times.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-gLCd12P09gA/U8DvGaAZfaI/AAAAAAAA0nM/nl47mw5l_wU/s1600/sample-php-code.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-gLCd12P09gA/U8DvGaAZfaI/AAAAAAAA0nM/nl47mw5l_wU/s1600/sample-php-code.png" height="390" width="640" /></a></div><br /><h3 style="text-align: left;">How do programmers make the world go round?</h3>You just beeped your smart card at the metro/train station entrance, it showed you the current balance n the card on the small screen, how? Someone coded the software for the embedded system to detect the NFC chip and saved your valuable time and effort. There are other countless examples on every nook and corner you go today. You are able to catch up to the fast paced life because someone thought of a software solution to a problem and other people spent hours coding the right solution for it.<br /><br />When I worked for a Travel reporting system for UNICEF in Kathmandu, Nepal, it was a pleasure to know that after implementing the new system the reimbursement of travel expenses was 40% faster. I think each programmer/developer/software engineer whose project has gone live has one or more similar experiences.<br /><h3 style="text-align: left;">Due respect to other professionals</h3><div>Surely it is only only about programmers, like doctors save lives, engineers help build houses, pilots fly the plane. If you look at any profession software has changed how things are done now and how it was done some years back. Think of a banker who had to record all data on paper registers, now can simply enter the data to this awesome system and it is reported till the balance sheet.&nbsp;</div><div><br /></div><div>I would also like to convey my due respect to all other tech related jobs including systems analysts, project managers, data architects, system administrators they are all very important parts of the puzzle. &nbsp;&nbsp;</div><h3 style="text-align: left;">We need more programmers a.k.a super hero world changers :)</h3>I watched the <a href="http://www.youtube.com/watch?v=dU1xS07N-FA" target="_blank">video</a> below some times back and I think people should know that their live is a bit more easy because great ideas were successfully executed by talented programmers.<br /><br /><iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/nKIu9yen5nc" width="560"></iframe><br /><br />Computers are everywhere in all fields, so we will be needing more rock stars (programmers) who can transform from ideas on papers to real life applications that can be used by many people.<br /><br /><h3 style="text-align: left;">Programmers are addicted to code</h3>Starting to code is not easy and taking it as a profession does require lots of passion, determination and devotion. It takes lots of learning with hours and hours of thinking and making things work. After you pass the initial phase of how do I make it work then you start getting addicted to coding. It is an amazing feeling that you can build something and you dive deeper into it. It requires lots of problem solving and creativity to get things done and get it done right. I recently read &#8221;<a href="http://www.huffingtonpost.ca/suzanne-ma/computer-programming-women-html500-vancouver_b_4739610.html" target="_blank">How I hacked my husband&#8217;s code addiction</a>&#8221; which explains how programmers behave at times.<br /><br />All in all it is this passion and addition to code which keeps programmers glued to their machines hours on hours to come up with something productive and useful. That mobile app you think is helping you a lot was build by some programmers who had to go through lots of hard work to get the thing working. So respect the devotion, time and effort put in by programmers and other tech professionals.<br /><h3 style="text-align: left;">Programmers deserve a big thank you</h3><div>Regardless of the language used, the product platform or the audience scope, all programmers deserve a <b>big thank you</b>. Thanks for all the free apps I got to use, for the endless long hours programmers have put to get things work, ripping your hair off to make that test pass and seeing the tests turn green at midnight, &nbsp;for all the free and open source code that helped all other programmers. Hats off to your hard work. Keep up the good work and making the world a better place.</div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ingredients of a Great Front End Application With AngularJs]]></title>
    <link href="http://yoursite.com/blog/2014/02/07/ingredients-of-great-front-end/"/>
    <updated>2014-02-07T09:32:00+04:00</updated>
    <id>http://yoursite.com/blog/2014/02/07/ingredients-of-great-front-end</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">In the past 12 months the popularity of AngularJs has exploded, which clearly hints that applications are being built following the multi-tire architecture. A good back-end API with a front end consumer application surely makes a capable duo that can handle any requirements of the application. If you have a multi-tire architecture then you don&#8217;t need to rebuild the back-end for serving data for other applications like a mobile application or any data requirement.<br /><br /><div class="separator" style="clear: both; text-align: center;"></div><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-cR5rMFn2Eho/UvRkqrXlCDI/AAAAAAAAnes/JZThI0jhcS4/s1600/Selection_005.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" src="http://1.bp.blogspot.com/-cR5rMFn2Eho/UvRkqrXlCDI/AAAAAAAAnes/JZThI0jhcS4/s1600/Selection_005.png" height="369" width="640" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;">Popularity of Angular JS, source <a href="http://www.google.com/trends/explore#q=angularjs%2C%20emberjs%2C%20backbonejs&amp;date=today%2012-m&amp;cmpt=q" target="_blank">Google Trends</a></td></tr></tbody></table><div class="separator" style="clear: both; text-align: center;"></div><br /><h3 style="text-align: left;">Why Front-end applications?</h3>Front end applications with java-script run on the user&#8217;s browser, when the data interaction is moved to models and services supported by a framework it makes the front end application very powerful. This also enables the concept of <a href="http://en.wikipedia.org/wiki/Single-page_application" target="_blank">Single Page Application</a> (SPA). Below are the <b>7 ingredients</b> of a great front end application with <b>Angularjs</b> being the main ingredient.<br /><h3 style="text-align: left;">AngularJs</h3><a href="http://angularjs.org/" target="_blank">AngularJs</a> is a &#8220;Superheroic JavaScript MVW Framework&#8221; by Google which lets the developers abstract out the model view controller on front end (user browser) level. Its amazing <a href="http://sporto.github.io/blog/2013/04/12/comparison-angular-backbone-can-ember/" target="_blank">features</a> include two way data binding, routing and directives to name some. Angular with its <a href="http://code.tutsplus.com/tutorials/5-awesome-angularjs-features--net-25651" target="_blank">features</a> and flexibility might be your safest bet if you want to develop a front end application consuming data from a back-end API service.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-US25BlWq9Z8/UvRkyib883I/AAAAAAAAne4/a8AmMj7gORQ/s1600/angular_home.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-US25BlWq9Z8/UvRkyib883I/AAAAAAAAne4/a8AmMj7gORQ/s1600/angular_home.jpg" height="321" width="640" /></a></div><br /><h3 style="text-align: left;">YeoMan</h3><a href="http://yeoman.io/" target="_blank">Yeoman</a> is a scaffolding which provides generators that can speed up the application development process. It supports Angular, when combined with other great applications it helps you build your front end application with ease. It does the heavy lifting for you so that you can focus on the code better. As mentioned:<br /><blockquote>Yeoman is a robust and opinionated client-side stack, comprising tools and frameworks that can help developers quickly build beautiful web applications. We take care of providing everything needed to get started without any of the normal headaches associated with a manual setup.</blockquote><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-erIDXTqhAAE/UvRn2ftJlGI/AAAAAAAAnfA/K529macB_34/s1600/yeoMan.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-erIDXTqhAAE/UvRn2ftJlGI/AAAAAAAAnfA/K529macB_34/s1600/yeoMan.jpg" height="446" width="640" /></a></div><h3 style="text-align: left;">Bower</h3><div><a href="http://bower.io/search/" target="_blank">Bower</a> is a package manager for javascript projects. <a href="https://getcomposer.org/" target="_blank">Composer</a> is the main dependency and package manger for PHP, similarly bower is the dependency manager for Javascript. It has a lot of packages which can be used for your project and managing the dependencies is matter of just one bower.json file on your project. You just do a bower install and all the dependencies are downloaded for you.</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-jqH0ALKrubw/UvRqdUkoNAI/AAAAAAAAnfM/2fif9_dsIsk/s1600/bower.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-jqH0ALKrubw/UvRqdUkoNAI/AAAAAAAAnfM/2fif9_dsIsk/s1600/bower.jpg" height="318" width="640" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><h3 style="text-align: left;">GruntJs</h3><div><a href="http://gruntjs.com/" target="_blank">Grunt</a> is a javascript task runner, it can automate tasks so that you can focus more on the development. In relation with AngularJs it can be used to start the server, check file changes to compile with the new changes and perform auto reload, check for JSLint, run your tests etc. You can configure the tasks in a grunt file and utilize its powerful API to create your own tasks.</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-smmph9DImZs/UvRqdhJFmOI/AAAAAAAAnfk/NSDyhxvQIVQ/s1600/gruntjs.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-smmph9DImZs/UvRqdhJFmOI/AAAAAAAAnfk/NSDyhxvQIVQ/s1600/gruntjs.jpg" height="340" width="640" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><h3 style="text-align: left;">Jade</h3><div>Now you have a good separation of your front and and you are coding some javascript model, services and controller. How would you manage the view/template part of the application. There are many options like <a href="http://handlebarsjs.com/" target="_blank">Handelbars</a>, <a href="http://paularmstrong.github.io/swig/" target="_blank">Swig</a>&nbsp;(similar to <a href="http://twig.sensiolabs.org/" target="_blank">Twig</a>&nbsp;in php) but using <a href="http://jade-lang.com/" target="_blank">Jade</a> might be easier.&nbsp;Jade is like a compressed version of HTML which makes writing templates much easier and faster. Jade files can be compiled to output as HTML with a grunt task.</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-9XOB_4jdzFE/UvRqeLf0hZI/AAAAAAAAnfo/KnnmSRPq3JA/s1600/jade-html.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-9XOB_4jdzFE/UvRqeLf0hZI/AAAAAAAAnfo/KnnmSRPq3JA/s1600/jade-html.jpg" height="338" width="640" /></a></div><div><br /></div><h3 style="text-align: left;">Compass CSS</h3><div><a href="http://compass-style.org/" target="_blank">Compass</a> is a open source CSS authoring framework that use <a href="http://sass-lang.com/" target="_blank">Sass</a> to make writing CSS logical, easy and painless. It is like making CSS programmable with variables, nesting styles and other features which helps on making CSS code reusable and maintainable. Easy to <a href="http://compass-style.org/install/" target="_blank">install</a> and easier to get started with Compass will change the way you write CSS.&nbsp;</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-U4t6ljJWUPk/UvRqddaqmcI/AAAAAAAAnfg/OUDogJvvPds/s1600/compass-css.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-U4t6ljJWUPk/UvRqddaqmcI/AAAAAAAAnfg/OUDogJvvPds/s1600/compass-css.jpg" height="426" width="640" /></a></div><div><br /></div><h3 style="text-align: left;">JasmineJs&nbsp;</h3><div>Now you have great java-script code a well managed front end with Jade and Compass, how about some testing. <a href="http://jasmine.github.io/" target="_blank">JasmineJs</a> is a behavior driven development framework for testing javascirpt code. Test suites describe the tests and match the output. You can even use a custom solution with other libraries like <a href="http://phantomjs.org/" target="_blank">PhantomJs</a>. Still Jasmine can be a very <a href="http://www.tuesdaydeveloper.com/2013/06/angularjs-testing-with-karma-and-jasmine/" target="_blank">good option</a> for testing AngularJs application.</div><div><br /></div><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-UjLwCDcW6EU/UvRqeAztAPI/AAAAAAAAnfw/Ml3JK2VP0X4/s1600/jasmine-js.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-UjLwCDcW6EU/UvRqeAztAPI/AAAAAAAAnfw/Ml3JK2VP0X4/s1600/jasmine-js.png" height="308" width="640" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><h3 style="text-align: left;">Conclusion</h3><div>Using the right tools and technology to do your job will always benefit you, it will save time and effort maximizing productivity. A good mix and match of all the ingredients would yield desired results, I hope these you will use these tools when you think of developing a new front end application.</div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using PHPUnit Data Provider for Less Code and Greater Coverage]]></title>
    <link href="http://yoursite.com/blog/2014/02/01/using-phpunit-data-provider-for-less/"/>
    <updated>2014-02-01T11:51:00+04:00</updated>
    <id>http://yoursite.com/blog/2014/02/01/using-phpunit-data-provider-for-less</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on"><div class="separator" style="clear: both; text-align: center;"></div>Writing testable code is a harder target to achieve than just writing tests for the code written. You cannot write comprehensive tests that covers many function each of 200 or more lines and classes that measure 1000s of lines of code (<a href="http://en.wikipedia.org/wiki/Source_lines_of_code" target="_blank">LOC</a>). Writing testable code is always important if you want to be able to test/unit test your code and be confident that nothing will break.<br /><br />Tests also help a lot when you re-factor some code or write new features. If all the tests are passing you are quite sure that nothing is breaking. Seeing all tests come out green is a very good sight for us software engineer.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-mIzQVI5oxMU/Uuu1Bn0PmKI/AAAAAAAAndg/Wkq0HGPD1pM/s1600/all_green_tests.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-mIzQVI5oxMU/Uuu1Bn0PmKI/AAAAAAAAndg/Wkq0HGPD1pM/s1600/all_green_tests.jpg" height="156" width="640" /></a></div><br /><h2 style="text-align: left;">Testing in PHP with PHPUnit</h2>Unit testing and testing as a whole is not a new thing in PHP, &nbsp;<a href="http://phpunit.de/" target="_blank">PHPUnit</a> the de facto unit testing framework in PHP started in <a href="http://gpfr.sourceforge.net/releases/phpunit-1.0.0/" target="_blank">2001</a>, The chart below shows that popularity of PHPUnit has really grown over the past years in comparison to <a href="http://www.simpletest.org/" target="_blank">Simple Test</a> another PHP testing framework.<br /><br /><table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody><tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-iY16ziAjtiE/UuylucQEn-I/AAAAAAAAndw/cSZ9W2csjUM/s1600/phpUnit_popularity.jpg" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" src="http://1.bp.blogspot.com/-iY16ziAjtiE/UuylucQEn-I/AAAAAAAAndw/cSZ9W2csjUM/s1600/phpUnit_popularity.jpg" height="387" width="640" /></a></td></tr><tr><td class="tr-caption" style="text-align: center;"><span style="font-size: small;">Source:&nbsp;</span><a href="http://www.google.com/trends/explore#q=phpunit%2C%20simpletest" style="font-size: medium;" target="_blank">Google Trends</a></td></tr></tbody></table>PHPUnit is a great unit testing framework that can automate testing and help in getting optimal output. As they state in the <a href="http://phpunit.de/manual/current/en/index.html" target="_blank">documentation</a>:<br /><blockquote>The difference between a good programmer and a bad programmer is that the good programmer uses tests to detect mistakes as soon as possible. The sooner you test for a mistake the greater your chance of finding it and the less it will cost to find and fix.</blockquote>It is true the sooner the problem is detected and fixed the better it is, same goes when some code is re-factored, a new feature is added or a bug resolved.<br /><h2 style="text-align: left;">Data Provider in PHPUnit</h2><div>There are may features of PHPUnit, which can help in writing comprehensive <a href="http://en.wikipedia.org/wiki/Unit_testing" target="_blank">unit testing</a> and moving toward the direction of <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">test driven development</a> (TDD). Among them,&nbsp;<a href="http://phpunit.de/manual/current/en/writing-tests-for-phpunit.html#writing-tests-for-phpunit.data-providers" target="_blank">data providers</a> provide arbitrary arguments to a test function so that same code can be used to test multiple scenarios and possible cases. In this very simple example I will use a part of checkout. The logic is very simple:</div><div><ol style="text-align: left;"><li>If the payment method is &nbsp;&#8220;Cash&#8221;, apply a cash on delivery fee of 5.0</li><li>If the payment method is &#8220;Credit Card&#8221;, do not apply a cash on delivery fee.&nbsp;</li></ol><h3 style="text-align: left;">The part of the checkout class is given below:</h3><script src="http://gist-it.appspot.com/https://github.com/geshan/dataprovider-example/blob/master/src/DataProvider/Example/Checkout.php"></script><br />Source: <a href="https://github.com/geshan/dataprovider-example/blob/master/src/DataProvider/Example/Checkout.php" target="_blank">Github repository</a><br /><br /><h3 style="text-align: left;">The test for the above checkout class is given below:</h3><script src="http://gist-it.appspot.com/https://github.com/geshan/dataprovider-example/blob/master/tests/DataProvider/Example/Test/CheckoutTest.php"></script><br />Source: <a href="https://github.com/geshan/dataprovider-example/blob/master/tests/DataProvider/Example/Test/CheckoutTest.php" target="_blank">Github repository</a><br /><h3 style="text-align: left;">What makes using data provider in this example relevant and optimal?</h3></div><div><ul style="text-align: left;"><li>As the test needs to be run for both &#8220;Cash&#8221; and &#8220;Credit Card&#8221; the only thing it changes here is the addition of cash on delivery fee.</li><li>There is just one test with the payment method being passed as a parameter, saving us from writing X no of tests for X no. of payment methods. So less code and more coverage.</li><li>The test is clear concise and understandable.</li></ul><h3 style="text-align: left;">Things to consider in the code:</h3><div><ul style="text-align: left;"><li>The test runs the as many times as the data set provided by the provider function.</li><li>@dataProvider annotation is necessary in the test to get the data sets from the provider function.</li><li>When writing the provider function, its better to comment who is using the provided data sets and the order of variables (check the comment of &nbsp;paymentMethodProvider method).</li></ul><div>Both the above files with composer.json is available as a public <a href="https://github.com/geshan/dataprovider-example" target="_blank">git repository</a> for your reference, you can check the <a href="https://github.com/geshan/dataprovider-example/blob/master/README.md" target="_blank">read me</a> file to know how to run the tests.</div></div><h2 style="text-align: left;">Conclusion</h2></div><div>Whenever you write tests and think, &#8220;Why am I writing a new test for the similar thing. I guess there can be a way to write less test/code and cover all my test cases.&#8221; Then is time to use data providers in PHPUnit. You save on time and effort to cover the cases, a new case is just another array in the provider function, even in case of new test cases being added its a one line change given the tests pass. I hope this helps you to write less test code and achieve more coverage.</div><div><br /></div></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 PHP Development Improvements Rediscovered in 2013]]></title>
    <link href="http://yoursite.com/blog/2014/01/10/5-php-development-improvements/"/>
    <updated>2014-01-10T11:27:00+04:00</updated>
    <id>http://yoursite.com/blog/2014/01/10/5-php-development-improvements</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Love it or hate it, the fact is <a href="http://w3techs.com/technologies/history_overview/programming_language" target="_blank">80% of the web</a> is PHP and its usage has been in an increasing trend since 2010. Be informed that PHP is much better than you think as per&nbsp;<a href="http://fabien.potencier.org/article/64/php-is-much-better-than-you-think" target="_blank">Fabien Potencier</a>. As a <a href="http://tech.namshi.com/portfolio/" target="_blank">team</a>, we&nbsp;have worked a lot on PHP this year, specifically on <a href="http://symfony.com/" target="_blank">Symfony 2</a>&nbsp;mainly for our back-end APIs. It has really strengthen our multi-application <a href="http://en.wikipedia.org/wiki/Service-oriented_architecture" target="_blank">SOA</a> platform and enabled us to build responsive front ends on top of it.<br /><br />In this process of having a robust back-end API, we have rediscovered and utilized some technologies inline with PHP development and improved on them in the past year. Here is a summary of these PHP related technologies/methods/best practices that will help all PHP developers:<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-MwFJBHH84Ww/Us-MFH60P6I/AAAAAAAAnTQ/1Y7qEnUuMCU/s1600/005PHP_Things.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-MwFJBHH84Ww/Us-MFH60P6I/AAAAAAAAnTQ/1Y7qEnUuMCU/s1600/005PHP_Things.jpg" height="400" width="400" /></a></div><img /><br /><h3>PHP Specification Request - PSR</h3>PSR (0-3) PHP Specification Request is a set of standards devised by the<a href="http://www.php-fig.org/" target="_blank"> PHP Framework Interoperability Group (FIG)</a> to standardize <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md" target="_blank">auto-loading</a>, <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md" target="_blank">coding standard</a>, <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide-meta.md" target="_blank">coding style</a> and <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md" target="_blank">logger interface</a>. PHP-FIG members include big names like Zend, Symfony, Drupal to name some. We follow a slightly modified version of PSR-2 as our coding standards.<br /><br />Writing clean code is always helpful and if you follow a widely accepted coding standard it makes it easier to open source the code. To make the process better you can use <a href="https://github.com/squizlabs/PHP_CodeSniffer" target="_blank">PHP code sniffer</a> and integrate it with your IDE for code evaluation while you type.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-Jp0OILLv7Lg/Us-HdQ5Mq-I/AAAAAAAAnTE/vMl0Z7gOV_4/s1600/01php_fig_psr.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-Jp0OILLv7Lg/Us-HdQ5Mq-I/AAAAAAAAnTE/vMl0Z7gOV_4/s1600/01php_fig_psr.png" height="243" width="400" /></a></div><br /><h3>Composer and Packagist</h3>Composer is dependency management tool in PHP which lets you define libraries that your project is dependent on. <a href="http://getcomposer.org/" target="_blank">Composer</a> uses simple JSON declaration of dependent project in composer.json files and downloads the related libraries in the vendor folder. <a href="http://getcomposer.org/doc/00-intro.md" target="_blank">Getting started</a> in easy with compser and all the opensource packages are listed in <a href="https://packagist.org/" target="_blank">packagist</a>, where you can search for packages you need.<br /><br />Lets say if you want to work on Paypal and think someone might have submitted a wrapper library for Paypal Rest API, you can search and find the library that suits your need. You can even submit your library/package to be open source and used by others. Composer really makes working with dependency and managing version of the dependent library an easy task.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://1.bp.blogspot.com/-UfFC3YJNwQQ/Us-Nw55qorI/AAAAAAAAnTc/MPZ80brxYVc/s1600/02Composer_Packagist.jpg" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-UfFC3YJNwQQ/Us-Nw55qorI/AAAAAAAAnTc/MPZ80brxYVc/s1600/02Composer_Packagist.jpg" height="228" width="400" /></a></div><br /><h3>Virtual Development Environment - Vagrant</h3><a href="http://www.vagrantup.com/" target="_blank">Vagrant</a> is a virtual development environment which works as a virtual machine on your main machine with all needed software stack as config. Basically it creates a reproducible and portable development machine which is shared by all the developers, that in turn eliminates &#8220;Works on my machine&#8221; syndrome.<br /><br />Another thing it greatly helps is the time to set up a machine and get running. In our case, it came down from around 2 days to install all the software stack and configure all environments to mere 5 hours including the download of all needed software. If you want your developer to start coding on the first day, this is your best bet as s/he does not need to install the correct version of PHP, MYSQL, X-Debug and all other software.<br /><div class="separator" style="clear: both; text-align: center;"></div><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-YPC1Uux4_Pk/Us-PYPwyIuI/AAAAAAAAnTw/8Rk1S9x3L1Q/s1600/03Vagrant.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-YPC1Uux4_Pk/Us-PYPwyIuI/AAAAAAAAnTw/8Rk1S9x3L1Q/s1600/03Vagrant.png" height="192" width="400" /></a></div><br /><h3>Debugging with X-Debug</h3>Debugging in PHP used to be that elusive creature that you see sometimes and it just hides when you want to see it. On the contrary if you setup <a href="http://xdebug.org/" target="_blank">X-Debug</a> correctly on your machine (or your vagrant) you can run the debugger and inspect how your code executes line by line. Beware that its a correct mix of X-Debug, a client on your browser like <a href="https://addons.mozilla.org/en-US/firefox/addon/easy-xdebug/" target="_blank">easy Xdebug</a> for firefox and a good IDE that supports debugging like <a href="https://netbeans.org/downloads/index.html" target="_blank">NetBeans</a> or <a href="http://www.jetbrains.com/phpstorm/" target="_blank">PHPStorm</a>. Know well how to <a href="http://net.tutsplus.com/tutorials/tools-and-tips/xdebug-professional-php-debugging/" target="_blank">set it up</a>.<br /><br />In our case, X-Debug is installed on the vagrant machine so each developer does not need to manually install it. Just set up the preferred client on the browser and run the debugger on the IDE, then you can get new insights on how your code executes.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-KeIbou7dBuc/Us-PV9FMkUI/AAAAAAAAnTs/7E9d2SpfdeQ/s1600/04Xdebug.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-KeIbou7dBuc/Us-PV9FMkUI/AAAAAAAAnTs/7E9d2SpfdeQ/s1600/04Xdebug.png" height="258" width="400" /></a></div><br /><h3>Automated Testing with PHPUnit</h3>When your code is tested and all tests pass (they are green! yehh) you are confident that things will not break on the production environment. Writing test verify what the code is supposed do and it serves as animated documentation of the code. Not only does it help save the development time on the long run, you are already aware of the related things that break due the the changes you made when you coded a feature/fix. We use <a href="http://phpunit.de/" target="_blank">PHPUnit</a>&nbsp;to test on our PHP code so that we know all our features are performing how it should.<br /><br />I would not call our way of testing <a href="http://en.wikipedia.org/wiki/Test-driven_development" target="_blank">Test Driven Development</a> (TDD) or core <a href="http://en.wikipedia.org/wiki/Unit_testing" target="_blank">Unit Testing</a> of each class. Rather its our own way of ensuring that the feature works as intended. We code the feature first and then write the test to verify if it meets the requirements. We generally ensure that before sending a pull request on <a href="https://github.com/" target="_blank">git hub</a> all the test pass.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://3.bp.blogspot.com/-ip-gzNysvCI/Us-UNflvzOI/AAAAAAAAnUA/rkH4w8Q9WX0/s1600/05PhpUnit.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-ip-gzNysvCI/Us-UNflvzOI/AAAAAAAAnUA/rkH4w8Q9WX0/s1600/05PhpUnit.png" height="218" width="400" /></a></div><div class="separator" style="clear: both; text-align: center;"><br /></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">All in all 2013 has been a great year with lots of things to learn and explore, we experimented with many things as we raised our technical know how to a different level in terms of the tools we use. We went from a cron that runs every minute to <a href="http://www.rabbitmq.com/" target="_blank">Rabbit MQ</a> messaging queue that can be a different blog post :).</div><br /><blockquote>Now we follow continuous integration with <a href="https://travis-ci.org/" target="_blank">Travis CI</a>&nbsp;which runs the test we wrote with PHPUnit taking the code from Git Hub. I would like to thank <a href="http://www.namshi.com/" target="_blank">our</a> VP - Technology <a href="http://odino.org/" target="_blank">Alex</a>&nbsp;(<a href="https://twitter.com/_odino_" target="_blank">@_Odino_</a>) for his vision and implementation of &nbsp;above mentioned technologies. Lets hope we see more advancement in 2014.</blockquote></div></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Control Book Outline Form and Menu for Specified Drupal Node Types]]></title>
    <link href="http://yoursite.com/blog/2009/11/16/control-book-outline-form-and-menu-for/"/>
    <updated>2009-11-16T05:54:00+04:00</updated>
    <id>http://yoursite.com/blog/2009/11/16/control-book-outline-form-and-menu-for</id>
    <content type="html"><![CDATA[<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Drupal has a good potential to be used as a blog, forum (some what), wiki or any other dedicated web application or combination of two or more services. Drupal as a wiki, out of the box is a little weird. Problem is <a href="http://drupal.org/" target="_blank">Drupal</a> organizes wiki as book pages and books and book pages are related. Some people might not agree that book node/content type is a form of wiki but they can be used as one.<br /><br /><br /><h3>Problem: </h3>The problem using Drupal book module and book pages as wiki is, the book page module adds book outline form part and the book outline menu as node/x/outline to all node types. All the node types do not need to be part of a book/wiki page. So this is the awkward part. I had to develop an application that had a wiki as a part with blogs and events as other services. So I faced this problem.<br /><br /><h3>The Search: </h3>Then I searched for the solution to show book outline form part and the book outline module in only specified Drupal nodes/content types. At the d.o (I hear this in all screencasts and podcasts - its Drupal.org ;) ) site I found this node: <a href="http://drupal.org/node/251798" target="_blank">http://drupal.org/node/251798</a> - and a code snippet by <a href="http://drupal.org/user/78454" target="_blank">mooffie</a>. But the code was very basic and not configurable or flexible.<br /><br /><h3>A Simple Move:</h3>I decided to use the code as it was a solution to my problem but also thought to make a configurable module out of it. So the module is called nobookoutline now, I have not put it in d.o as I&#8217;m not confident of getting a CVS account :). Here is the download <a href="http://www.mediafire.com/file/tmztxnyywwy/nobookoutline.zip" target="_blank">link</a> for the module.<br /><h3>The Solution: </h3>The module provides a user interface to select which node/content types you want to show the book outline form and /outline menu option to. Below is the screen-shot of the page you can see in Admin&gt;&gt; Content&gt;&gt; Book Outline Settings after you download and enable the module and login as site admin. you can access the page by going to&nbsp; admin/content/nobookoutline.<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/_L4bRnZ5TPr8/SwCusTXoQkI/AAAAAAAABKQ/V7Gxj-jdxzw/s1600/nobookoutline01.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><br /></a><a href="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCyqYsu3PI/AAAAAAAABKo/7KGk8s5CL0o/s1600/nobookoutline01.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCyqYsu3PI/AAAAAAAABKo/7KGk8s5CL0o/s320/nobookoutline01.png" height="213" width="320" /></a></div><br />After you select the appropriate node types and click save the book outline form and the menu node/x/outline will only appear on the desired node types. Like below:<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCvJGIrKII/AAAAAAAABKY/gpAv2_4kCek/s1600/nobookoutline03.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><br /></a><a href="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCsPDfzknI/AAAAAAAABKI/iZnH8ynUYV0/s1600/nobookoutline02.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCsPDfzknI/AAAAAAAABKI/iZnH8ynUYV0/s400/nobookoutline02.png" /></a></div><br /><br />Below is a book node that has outline, other nodes will not have the outline menu unless they are selected in the configuration page.<br /><br /><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCvZsM9VKI/AAAAAAAABKg/cJodDnhPCa0/s1600/nobookoutline04.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/_L4bRnZ5TPr8/SwCvZsM9VKI/AAAAAAAABKg/cJodDnhPCa0/s320/nobookoutline04.png" /></a></div><br />The book outline menu appears only for selected node types.<br /><br /><h3>Edited Code:</h3>The code has been edited to accommodate the new configuration page and here is a snippet below:<br /><br /><pre class="php" name="code">&lt;?php<br /><br /><br />/**<br /> * Implementation of hook_form_alter<br /> * @param $form<br /> * @param $form_state<br /> * @param $form_id<br /> * @return NULL<br /> */<br />function nobookoutline_form_alter(&amp;$form, $form_state, $form_id) {<br />  <br />   if (isset($form['#node']) &amp;&amp; $form_id == $form['#node']-&gt;type .'_node_form') {<br />      $node = $form['#node'];      <br />      // If it's not a book node, remove the Book Outline box:<br />      // now get settings as set.<br />      $nodetypes = variable_get('form_nobookoutline_nodetypes', array('book'));<br />      if(!in_array($node-&gt;type, $nodetypes)) {<br />        $form['book']['#access'] = FALSE;<br />      }<br />   }<br />}<br /><br /><br />/**<br /> * implementation of hook_menu_alter<br /> * @param $callbacks<br /> * @return unknown_type<br /> */<br />function nobookoutline_menu_alter(&amp;$callbacks) {<br />  // We install our own access callback to check if node is book type<br />  $callbacks['node/%node/outline']['access callback'] = '_nobookoutline_restrict_outline_tab';<br />}<br /><br />// Additional access control for the 'Outline' tab: don't show for non 'book' nodes...<br />function _nobookoutline_restrict_outline_tab($node) {<br />  $nodetypes = variable_get('form_nobookoutline_nodetypes', array('book'));<br />  <br />  if(!in_array($node-&gt;type, $nodetypes)) {<br />     <br />    return FALSE;<br />  }<br />  // Delegate to the original access callback:<br />  return _book_outline_access($node);<br />}<br /><br /><br />?&gt;<br /><br /></pre><br />What the code does is, it just restricts access to the form part and the menu link.<br /><h3>Conclusion</h3>The module can be made better with permissions but is functional enough for now. Hope it solves your problem.<br /><br /><br /><blockquote>Using Drupal as a wiki will not be a big deal if this minor issue is resolved. Happy Drupalling. </blockquote></div></div>

]]></content>
  </entry>
  
</feed>
